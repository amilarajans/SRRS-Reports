/*
 * This file is generated by jOOQ.
*/
package com.origins.domain;


import com.origins.domain.tables.*;
import com.origins.domain.tables.records.*;
import org.jooq.ForeignKey;
import org.jooq.Identity;
import org.jooq.UniqueKey;
import org.jooq.impl.AbstractKeys;
import org.jooq.types.UInteger;

import javax.annotation.Generated;


/**
 * A class modelling foreign key relationships between tables of the <code>tsd_srrs</code> 
 * schema
 */
@Generated(
    value = {
        "http://www.jooq.org",
        "jOOQ version:3.9.1"
    },
    comments = "This class is generated by jOOQ"
)
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class Keys {

    // -------------------------------------------------------------------------
    // IDENTITY definitions
    // -------------------------------------------------------------------------

    public static final Identity<AvailabilitiesRecord, UInteger> IDENTITY_AVAILABILITIES = Identities0.IDENTITY_AVAILABILITIES;
    public static final Identity<CategoriesRecord, UInteger> IDENTITY_CATEGORIES = Identities0.IDENTITY_CATEGORIES;
    public static final Identity<ReservationsRecord, UInteger> IDENTITY_RESERVATIONS = Identities0.IDENTITY_RESERVATIONS;
    public static final Identity<ResourcesRecord, UInteger> IDENTITY_RESOURCES = Identities0.IDENTITY_RESOURCES;
    public static final Identity<UserRecord, UInteger> IDENTITY_USER = Identities0.IDENTITY_USER;

    // -------------------------------------------------------------------------
    // UNIQUE and PRIMARY KEY definitions
    // -------------------------------------------------------------------------

    public static final UniqueKey<AvailabilitiesRecord> KEY_AVAILABILITIES_PRIMARY = UniqueKeys0.KEY_AVAILABILITIES_PRIMARY;
    public static final UniqueKey<CategoriesRecord> KEY_CATEGORIES_PRIMARY = UniqueKeys0.KEY_CATEGORIES_PRIMARY;
    public static final UniqueKey<ReservationsRecord> KEY_RESERVATIONS_PRIMARY = UniqueKeys0.KEY_RESERVATIONS_PRIMARY;
    public static final UniqueKey<ResourcesRecord> KEY_RESOURCES_PRIMARY = UniqueKeys0.KEY_RESOURCES_PRIMARY;
    public static final UniqueKey<UserRecord> KEY_USER_PRIMARY = UniqueKeys0.KEY_USER_PRIMARY;
    public static final UniqueKey<UserRecord> KEY_USER_USER_EMAIL_UNIQUE = UniqueKeys0.KEY_USER_USER_EMAIL_UNIQUE;

    // -------------------------------------------------------------------------
    // FOREIGN KEY definitions
    // -------------------------------------------------------------------------

    public static final ForeignKey<AvailabilitiesRecord, ResourcesRecord> AVAILABILITIES_RESOURCE_ID_FOREIGN = ForeignKeys0.AVAILABILITIES_RESOURCE_ID_FOREIGN;
    public static final ForeignKey<ReservationsRecord, ResourcesRecord> RESERVATIONS_RESOURCE_ID_FOREIGN = ForeignKeys0.RESERVATIONS_RESOURCE_ID_FOREIGN;
    public static final ForeignKey<ResourcesRecord, CategoriesRecord> RESOURCES_CATEGORY_ID_FOREIGN = ForeignKeys0.RESOURCES_CATEGORY_ID_FOREIGN;

    // -------------------------------------------------------------------------
    // [#1459] distribute members to avoid static initialisers > 64kb
    // -------------------------------------------------------------------------

    private static class Identities0 extends AbstractKeys {
        public static Identity<AvailabilitiesRecord, UInteger> IDENTITY_AVAILABILITIES = createIdentity(Availabilities.AVAILABILITIES, Availabilities.AVAILABILITIES.ID);
        public static Identity<CategoriesRecord, UInteger> IDENTITY_CATEGORIES = createIdentity(Categories.CATEGORIES, Categories.CATEGORIES.ID);
        public static Identity<ReservationsRecord, UInteger> IDENTITY_RESERVATIONS = createIdentity(Reservations.RESERVATIONS, Reservations.RESERVATIONS.ID);
        public static Identity<ResourcesRecord, UInteger> IDENTITY_RESOURCES = createIdentity(Resources.RESOURCES, Resources.RESOURCES.ID);
        public static Identity<UserRecord, UInteger> IDENTITY_USER = createIdentity(User.USER, User.USER.ID);
    }

    private static class UniqueKeys0 extends AbstractKeys {
        public static final UniqueKey<AvailabilitiesRecord> KEY_AVAILABILITIES_PRIMARY = createUniqueKey(Availabilities.AVAILABILITIES, "KEY_availabilities_PRIMARY", Availabilities.AVAILABILITIES.ID);
        public static final UniqueKey<CategoriesRecord> KEY_CATEGORIES_PRIMARY = createUniqueKey(Categories.CATEGORIES, "KEY_categories_PRIMARY", Categories.CATEGORIES.ID);
        public static final UniqueKey<ReservationsRecord> KEY_RESERVATIONS_PRIMARY = createUniqueKey(Reservations.RESERVATIONS, "KEY_reservations_PRIMARY", Reservations.RESERVATIONS.ID);
        public static final UniqueKey<ResourcesRecord> KEY_RESOURCES_PRIMARY = createUniqueKey(Resources.RESOURCES, "KEY_resources_PRIMARY", Resources.RESOURCES.ID);
        public static final UniqueKey<UserRecord> KEY_USER_PRIMARY = createUniqueKey(User.USER, "KEY_user_PRIMARY", User.USER.ID);
        public static final UniqueKey<UserRecord> KEY_USER_USER_EMAIL_UNIQUE = createUniqueKey(User.USER, "KEY_user_user_email_unique", User.USER.EMAIL);
    }

    private static class ForeignKeys0 extends AbstractKeys {
        public static final ForeignKey<AvailabilitiesRecord, ResourcesRecord> AVAILABILITIES_RESOURCE_ID_FOREIGN = createForeignKey(com.origins.domain.Keys.KEY_RESOURCES_PRIMARY, Availabilities.AVAILABILITIES, "availabilities_resource_id_foreign", Availabilities.AVAILABILITIES.RESOURCE_ID);
        public static final ForeignKey<ReservationsRecord, ResourcesRecord> RESERVATIONS_RESOURCE_ID_FOREIGN = createForeignKey(com.origins.domain.Keys.KEY_RESOURCES_PRIMARY, Reservations.RESERVATIONS, "reservations_resource_id_foreign", Reservations.RESERVATIONS.RESOURCE_ID);
        public static final ForeignKey<ResourcesRecord, CategoriesRecord> RESOURCES_CATEGORY_ID_FOREIGN = createForeignKey(com.origins.domain.Keys.KEY_CATEGORIES_PRIMARY, Resources.RESOURCES, "resources_category_id_foreign", Resources.RESOURCES.CATEGORY_ID);
    }
}
