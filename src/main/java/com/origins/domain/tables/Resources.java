/*
 * This file is generated by jOOQ.
*/
package com.origins.domain.tables;


import com.origins.domain.Keys;
import com.origins.domain.TsdSrrs;
import com.origins.domain.tables.records.ResourcesRecord;

import java.sql.Timestamp;
import java.util.Arrays;
import java.util.List;

import javax.annotation.Generated;

import org.jooq.Field;
import org.jooq.ForeignKey;
import org.jooq.Identity;
import org.jooq.Schema;
import org.jooq.Table;
import org.jooq.TableField;
import org.jooq.UniqueKey;
import org.jooq.impl.TableImpl;
import org.jooq.types.UInteger;


/**
 * This class is generated by jOOQ.
 */
@Generated(
    value = {
        "http://www.jooq.org",
        "jOOQ version:3.9.1"
    },
    comments = "This class is generated by jOOQ"
)
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class Resources extends TableImpl<ResourcesRecord> {

    private static final long serialVersionUID = 61870821;

    /**
     * The reference instance of <code>tsd_srrs.resources</code>
     */
    public static final Resources RESOURCES = new Resources();

    /**
     * The class holding records for this type
     */
    @Override
    public Class<ResourcesRecord> getRecordType() {
        return ResourcesRecord.class;
    }

    /**
     * The column <code>tsd_srrs.resources.id</code>.
     */
    public final TableField<ResourcesRecord, UInteger> ID = createField("id", org.jooq.impl.SQLDataType.INTEGERUNSIGNED.nullable(false), this, "");

    /**
     * The column <code>tsd_srrs.resources.category_id</code>.
     */
    public final TableField<ResourcesRecord, UInteger> CATEGORY_ID = createField("category_id", org.jooq.impl.SQLDataType.INTEGERUNSIGNED.nullable(false), this, "");

    /**
     * The column <code>tsd_srrs.resources.name</code>.
     */
    public final TableField<ResourcesRecord, String> NAME = createField("name", org.jooq.impl.SQLDataType.VARCHAR.length(255).nullable(false), this, "");

    /**
     * The column <code>tsd_srrs.resources.location</code>.
     */
    public final TableField<ResourcesRecord, String> LOCATION = createField("location", org.jooq.impl.SQLDataType.VARCHAR.length(255).nullable(false), this, "");

    /**
     * The column <code>tsd_srrs.resources.description</code>.
     */
    public final TableField<ResourcesRecord, String> DESCRIPTION = createField("description", org.jooq.impl.SQLDataType.VARCHAR.length(255).nullable(false), this, "");

    /**
     * The column <code>tsd_srrs.resources.created_at</code>.
     */
    public final TableField<ResourcesRecord, Timestamp> CREATED_AT = createField("created_at", org.jooq.impl.SQLDataType.TIMESTAMP, this, "");

    /**
     * The column <code>tsd_srrs.resources.updated_at</code>.
     */
    public final TableField<ResourcesRecord, Timestamp> UPDATED_AT = createField("updated_at", org.jooq.impl.SQLDataType.TIMESTAMP, this, "");

    /**
     * Create a <code>tsd_srrs.resources</code> table reference
     */
    public Resources() {
        this("resources", null);
    }

    /**
     * Create an aliased <code>tsd_srrs.resources</code> table reference
     */
    public Resources(String alias) {
        this(alias, RESOURCES);
    }

    private Resources(String alias, Table<ResourcesRecord> aliased) {
        this(alias, aliased, null);
    }

    private Resources(String alias, Table<ResourcesRecord> aliased, Field<?>[] parameters) {
        super(alias, null, aliased, parameters, "");
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Schema getSchema() {
        return TsdSrrs.TSD_SRRS;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Identity<ResourcesRecord, UInteger> getIdentity() {
        return Keys.IDENTITY_RESOURCES;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public UniqueKey<ResourcesRecord> getPrimaryKey() {
        return Keys.KEY_RESOURCES_PRIMARY;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public List<UniqueKey<ResourcesRecord>> getKeys() {
        return Arrays.<UniqueKey<ResourcesRecord>>asList(Keys.KEY_RESOURCES_PRIMARY);
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public List<ForeignKey<ResourcesRecord, ?>> getReferences() {
        return Arrays.<ForeignKey<ResourcesRecord, ?>>asList(Keys.RESOURCES_CATEGORY_ID_FOREIGN);
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Resources as(String alias) {
        return new Resources(alias, this);
    }

    /**
     * Rename this table
     */
    @Override
    public Resources rename(String name) {
        return new Resources(name, null);
    }
}
