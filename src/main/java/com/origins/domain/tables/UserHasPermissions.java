/*
 * This file is generated by jOOQ.
*/
package com.origins.domain.tables;


import com.origins.domain.Keys;
import com.origins.domain.SrrsTsd;
import com.origins.domain.tables.records.UserHasPermissionsRecord;

import java.util.Arrays;
import java.util.List;

import javax.annotation.Generated;

import org.jooq.Field;
import org.jooq.ForeignKey;
import org.jooq.Schema;
import org.jooq.Table;
import org.jooq.TableField;
import org.jooq.UniqueKey;
import org.jooq.impl.TableImpl;
import org.jooq.types.UInteger;


/**
 * This class is generated by jOOQ.
 */
@Generated(
    value = {
        "http://www.jooq.org",
        "jOOQ version:3.9.1"
    },
    comments = "This class is generated by jOOQ"
)
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class UserHasPermissions extends TableImpl<UserHasPermissionsRecord> {

    private static final long serialVersionUID = 172193832;

    /**
     * The reference instance of <code>srrs_tsd.user_has_permissions</code>
     */
    public static final UserHasPermissions USER_HAS_PERMISSIONS = new UserHasPermissions();

    /**
     * The class holding records for this type
     */
    @Override
    public Class<UserHasPermissionsRecord> getRecordType() {
        return UserHasPermissionsRecord.class;
    }

    /**
     * The column <code>srrs_tsd.user_has_permissions.user_id</code>.
     */
    public final TableField<UserHasPermissionsRecord, UInteger> USER_ID = createField("user_id", org.jooq.impl.SQLDataType.INTEGERUNSIGNED.nullable(false), this, "");

    /**
     * The column <code>srrs_tsd.user_has_permissions.permission_id</code>.
     */
    public final TableField<UserHasPermissionsRecord, UInteger> PERMISSION_ID = createField("permission_id", org.jooq.impl.SQLDataType.INTEGERUNSIGNED.nullable(false), this, "");

    /**
     * Create a <code>srrs_tsd.user_has_permissions</code> table reference
     */
    public UserHasPermissions() {
        this("user_has_permissions", null);
    }

    /**
     * Create an aliased <code>srrs_tsd.user_has_permissions</code> table reference
     */
    public UserHasPermissions(String alias) {
        this(alias, USER_HAS_PERMISSIONS);
    }

    private UserHasPermissions(String alias, Table<UserHasPermissionsRecord> aliased) {
        this(alias, aliased, null);
    }

    private UserHasPermissions(String alias, Table<UserHasPermissionsRecord> aliased, Field<?>[] parameters) {
        super(alias, null, aliased, parameters, "");
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Schema getSchema() {
        return SrrsTsd.SRRS_TSD;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public UniqueKey<UserHasPermissionsRecord> getPrimaryKey() {
        return Keys.KEY_USER_HAS_PERMISSIONS_PRIMARY;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public List<UniqueKey<UserHasPermissionsRecord>> getKeys() {
        return Arrays.<UniqueKey<UserHasPermissionsRecord>>asList(Keys.KEY_USER_HAS_PERMISSIONS_PRIMARY);
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public List<ForeignKey<UserHasPermissionsRecord, ?>> getReferences() {
        return Arrays.<ForeignKey<UserHasPermissionsRecord, ?>>asList(Keys.USER_HAS_PERMISSIONS_USER_ID_FOREIGN, Keys.USER_HAS_PERMISSIONS_PERMISSION_ID_FOREIGN);
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public UserHasPermissions as(String alias) {
        return new UserHasPermissions(alias, this);
    }

    /**
     * Rename this table
     */
    @Override
    public UserHasPermissions rename(String name) {
        return new UserHasPermissions(name, null);
    }
}
