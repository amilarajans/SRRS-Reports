/*
 * This file is generated by jOOQ.
*/
package com.origins.domain.tables.records;


import com.origins.domain.tables.PasswordResets;

import java.sql.Timestamp;

import javax.annotation.Generated;

import org.jooq.Field;
import org.jooq.Record3;
import org.jooq.Row3;
import org.jooq.impl.TableRecordImpl;


/**
 * This class is generated by jOOQ.
 */
@Generated(
    value = {
        "http://www.jooq.org",
        "jOOQ version:3.9.1"
    },
    comments = "This class is generated by jOOQ"
)
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class PasswordResetsRecord extends TableRecordImpl<PasswordResetsRecord> implements Record3<String, String, Timestamp> {

    private static final long serialVersionUID = -542667669;

    /**
     * Setter for <code>tsd_srrs.password_resets.email</code>.
     */
    public void setEmail(String value) {
        set(0, value);
    }

    /**
     * Getter for <code>tsd_srrs.password_resets.email</code>.
     */
    public String getEmail() {
        return (String) get(0);
    }

    /**
     * Setter for <code>tsd_srrs.password_resets.token</code>.
     */
    public void setToken(String value) {
        set(1, value);
    }

    /**
     * Getter for <code>tsd_srrs.password_resets.token</code>.
     */
    public String getToken() {
        return (String) get(1);
    }

    /**
     * Setter for <code>tsd_srrs.password_resets.created_at</code>.
     */
    public void setCreatedAt(Timestamp value) {
        set(2, value);
    }

    /**
     * Getter for <code>tsd_srrs.password_resets.created_at</code>.
     */
    public Timestamp getCreatedAt() {
        return (Timestamp) get(2);
    }

    // -------------------------------------------------------------------------
    // Record3 type implementation
    // -------------------------------------------------------------------------

    /**
     * {@inheritDoc}
     */
    @Override
    public Row3<String, String, Timestamp> fieldsRow() {
        return (Row3) super.fieldsRow();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Row3<String, String, Timestamp> valuesRow() {
        return (Row3) super.valuesRow();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Field<String> field1() {
        return PasswordResets.PASSWORD_RESETS.EMAIL;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Field<String> field2() {
        return PasswordResets.PASSWORD_RESETS.TOKEN;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Field<Timestamp> field3() {
        return PasswordResets.PASSWORD_RESETS.CREATED_AT;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public String value1() {
        return getEmail();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public String value2() {
        return getToken();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Timestamp value3() {
        return getCreatedAt();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public PasswordResetsRecord value1(String value) {
        setEmail(value);
        return this;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public PasswordResetsRecord value2(String value) {
        setToken(value);
        return this;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public PasswordResetsRecord value3(Timestamp value) {
        setCreatedAt(value);
        return this;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public PasswordResetsRecord values(String value1, String value2, Timestamp value3) {
        value1(value1);
        value2(value2);
        value3(value3);
        return this;
    }

    // -------------------------------------------------------------------------
    // Constructors
    // -------------------------------------------------------------------------

    /**
     * Create a detached PasswordResetsRecord
     */
    public PasswordResetsRecord() {
        super(PasswordResets.PASSWORD_RESETS);
    }

    /**
     * Create a detached, initialised PasswordResetsRecord
     */
    public PasswordResetsRecord(String email, String token, Timestamp createdAt) {
        super(PasswordResets.PASSWORD_RESETS);

        set(0, email);
        set(1, token);
        set(2, createdAt);
    }
}
