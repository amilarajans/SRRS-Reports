/*
 * This file is generated by jOOQ.
*/
package com.origins.domain.tables.records;


import com.origins.domain.tables.RoleHasPermissions;

import javax.annotation.Generated;

import org.jooq.Field;
import org.jooq.Record2;
import org.jooq.Row2;
import org.jooq.impl.UpdatableRecordImpl;
import org.jooq.types.UInteger;


/**
 * This class is generated by jOOQ.
 */
@Generated(
    value = {
        "http://www.jooq.org",
        "jOOQ version:3.9.1"
    },
    comments = "This class is generated by jOOQ"
)
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class RoleHasPermissionsRecord extends UpdatableRecordImpl<RoleHasPermissionsRecord> implements Record2<UInteger, UInteger> {

    private static final long serialVersionUID = 1422340310;

    /**
     * Setter for <code>tsd_srrs.role_has_permissions.permission_id</code>.
     */
    public void setPermissionId(UInteger value) {
        set(0, value);
    }

    /**
     * Getter for <code>tsd_srrs.role_has_permissions.permission_id</code>.
     */
    public UInteger getPermissionId() {
        return (UInteger) get(0);
    }

    /**
     * Setter for <code>tsd_srrs.role_has_permissions.role_id</code>.
     */
    public void setRoleId(UInteger value) {
        set(1, value);
    }

    /**
     * Getter for <code>tsd_srrs.role_has_permissions.role_id</code>.
     */
    public UInteger getRoleId() {
        return (UInteger) get(1);
    }

    // -------------------------------------------------------------------------
    // Primary key information
    // -------------------------------------------------------------------------

    /**
     * {@inheritDoc}
     */
    @Override
    public Record2<UInteger, UInteger> key() {
        return (Record2) super.key();
    }

    // -------------------------------------------------------------------------
    // Record2 type implementation
    // -------------------------------------------------------------------------

    /**
     * {@inheritDoc}
     */
    @Override
    public Row2<UInteger, UInteger> fieldsRow() {
        return (Row2) super.fieldsRow();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Row2<UInteger, UInteger> valuesRow() {
        return (Row2) super.valuesRow();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Field<UInteger> field1() {
        return RoleHasPermissions.ROLE_HAS_PERMISSIONS.PERMISSION_ID;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Field<UInteger> field2() {
        return RoleHasPermissions.ROLE_HAS_PERMISSIONS.ROLE_ID;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public UInteger value1() {
        return getPermissionId();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public UInteger value2() {
        return getRoleId();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public RoleHasPermissionsRecord value1(UInteger value) {
        setPermissionId(value);
        return this;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public RoleHasPermissionsRecord value2(UInteger value) {
        setRoleId(value);
        return this;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public RoleHasPermissionsRecord values(UInteger value1, UInteger value2) {
        value1(value1);
        value2(value2);
        return this;
    }

    // -------------------------------------------------------------------------
    // Constructors
    // -------------------------------------------------------------------------

    /**
     * Create a detached RoleHasPermissionsRecord
     */
    public RoleHasPermissionsRecord() {
        super(RoleHasPermissions.ROLE_HAS_PERMISSIONS);
    }

    /**
     * Create a detached, initialised RoleHasPermissionsRecord
     */
    public RoleHasPermissionsRecord(UInteger permissionId, UInteger roleId) {
        super(RoleHasPermissions.ROLE_HAS_PERMISSIONS);

        set(0, permissionId);
        set(1, roleId);
    }
}
