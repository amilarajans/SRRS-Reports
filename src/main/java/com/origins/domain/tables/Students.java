/*
 * This file is generated by jOOQ.
*/
package com.origins.domain.tables;


import com.origins.domain.Keys;
import com.origins.domain.SrrsTsd;
import com.origins.domain.tables.records.StudentsRecord;

import java.sql.Timestamp;
import java.util.Arrays;
import java.util.List;

import javax.annotation.Generated;

import org.jooq.Field;
import org.jooq.Identity;
import org.jooq.Schema;
import org.jooq.Table;
import org.jooq.TableField;
import org.jooq.UniqueKey;
import org.jooq.impl.TableImpl;
import org.jooq.types.UInteger;


/**
 * This class is generated by jOOQ.
 */
@Generated(
    value = {
        "http://www.jooq.org",
        "jOOQ version:3.9.1"
    },
    comments = "This class is generated by jOOQ"
)
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class Students extends TableImpl<StudentsRecord> {

    private static final long serialVersionUID = -271087453;

    /**
     * The reference instance of <code>srrs_tsd.students</code>
     */
    public static final Students STUDENTS = new Students();

    /**
     * The class holding records for this type
     */
    @Override
    public Class<StudentsRecord> getRecordType() {
        return StudentsRecord.class;
    }

    /**
     * The column <code>srrs_tsd.students.id</code>.
     */
    public final TableField<StudentsRecord, UInteger> ID = createField("id", org.jooq.impl.SQLDataType.INTEGERUNSIGNED.nullable(false), this, "");

    /**
     * The column <code>srrs_tsd.students.reg_id</code>.
     */
    public final TableField<StudentsRecord, String> REG_ID = createField("reg_id", org.jooq.impl.SQLDataType.VARCHAR.length(255).nullable(false), this, "");

    /**
     * The column <code>srrs_tsd.students.pin</code>.
     */
    public final TableField<StudentsRecord, UInteger> PIN = createField("pin", org.jooq.impl.SQLDataType.INTEGERUNSIGNED.nullable(false), this, "");

    /**
     * The column <code>srrs_tsd.students.name</code>.
     */
    public final TableField<StudentsRecord, String> NAME = createField("name", org.jooq.impl.SQLDataType.VARCHAR.length(255).nullable(false), this, "");

    /**
     * The column <code>srrs_tsd.students.date_of_birth</code>.
     */
    public final TableField<StudentsRecord, Timestamp> DATE_OF_BIRTH = createField("date_of_birth", org.jooq.impl.SQLDataType.TIMESTAMP.nullable(false), this, "");

    /**
     * The column <code>srrs_tsd.students.address</code>.
     */
    public final TableField<StudentsRecord, String> ADDRESS = createField("address", org.jooq.impl.SQLDataType.VARCHAR.length(255).nullable(false), this, "");

    /**
     * The column <code>srrs_tsd.students.email_address</code>.
     */
    public final TableField<StudentsRecord, String> EMAIL_ADDRESS = createField("email_address", org.jooq.impl.SQLDataType.VARCHAR.length(255).nullable(false), this, "");

    /**
     * The column <code>srrs_tsd.students.contact_number</code>.
     */
    public final TableField<StudentsRecord, String> CONTACT_NUMBER = createField("contact_number", org.jooq.impl.SQLDataType.VARCHAR.length(255).nullable(false), this, "");

    /**
     * The column <code>srrs_tsd.students.class</code>.
     */
    public final TableField<StudentsRecord, String> CLASS = createField("class", org.jooq.impl.SQLDataType.VARCHAR.length(255).nullable(false), this, "");

    /**
     * The column <code>srrs_tsd.students.created_at</code>.
     */
    public final TableField<StudentsRecord, Timestamp> CREATED_AT = createField("created_at", org.jooq.impl.SQLDataType.TIMESTAMP, this, "");

    /**
     * The column <code>srrs_tsd.students.updated_at</code>.
     */
    public final TableField<StudentsRecord, Timestamp> UPDATED_AT = createField("updated_at", org.jooq.impl.SQLDataType.TIMESTAMP, this, "");

    /**
     * Create a <code>srrs_tsd.students</code> table reference
     */
    public Students() {
        this("students", null);
    }

    /**
     * Create an aliased <code>srrs_tsd.students</code> table reference
     */
    public Students(String alias) {
        this(alias, STUDENTS);
    }

    private Students(String alias, Table<StudentsRecord> aliased) {
        this(alias, aliased, null);
    }

    private Students(String alias, Table<StudentsRecord> aliased, Field<?>[] parameters) {
        super(alias, null, aliased, parameters, "");
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Schema getSchema() {
        return SrrsTsd.SRRS_TSD;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Identity<StudentsRecord, UInteger> getIdentity() {
        return Keys.IDENTITY_STUDENTS;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public UniqueKey<StudentsRecord> getPrimaryKey() {
        return Keys.KEY_STUDENTS_PRIMARY;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public List<UniqueKey<StudentsRecord>> getKeys() {
        return Arrays.<UniqueKey<StudentsRecord>>asList(Keys.KEY_STUDENTS_PRIMARY, Keys.KEY_STUDENTS_STUDENTS_REG_ID_UNIQUE);
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Students as(String alias) {
        return new Students(alias, this);
    }

    /**
     * Rename this table
     */
    @Override
    public Students rename(String name) {
        return new Students(name, null);
    }
}
