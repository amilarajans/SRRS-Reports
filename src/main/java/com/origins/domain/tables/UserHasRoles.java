/*
 * This file is generated by jOOQ.
*/
package com.origins.domain.tables;


import com.origins.domain.Keys;
import com.origins.domain.SrrsTsd;
import com.origins.domain.tables.records.UserHasRolesRecord;

import java.util.Arrays;
import java.util.List;

import javax.annotation.Generated;

import org.jooq.Field;
import org.jooq.ForeignKey;
import org.jooq.Schema;
import org.jooq.Table;
import org.jooq.TableField;
import org.jooq.UniqueKey;
import org.jooq.impl.TableImpl;
import org.jooq.types.UInteger;


/**
 * This class is generated by jOOQ.
 */
@Generated(
    value = {
        "http://www.jooq.org",
        "jOOQ version:3.9.1"
    },
    comments = "This class is generated by jOOQ"
)
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class UserHasRoles extends TableImpl<UserHasRolesRecord> {

    private static final long serialVersionUID = -599574184;

    /**
     * The reference instance of <code>srrs_tsd.user_has_roles</code>
     */
    public static final UserHasRoles USER_HAS_ROLES = new UserHasRoles();

    /**
     * The class holding records for this type
     */
    @Override
    public Class<UserHasRolesRecord> getRecordType() {
        return UserHasRolesRecord.class;
    }

    /**
     * The column <code>srrs_tsd.user_has_roles.role_id</code>.
     */
    public final TableField<UserHasRolesRecord, UInteger> ROLE_ID = createField("role_id", org.jooq.impl.SQLDataType.INTEGERUNSIGNED.nullable(false), this, "");

    /**
     * The column <code>srrs_tsd.user_has_roles.user_id</code>.
     */
    public final TableField<UserHasRolesRecord, UInteger> USER_ID = createField("user_id", org.jooq.impl.SQLDataType.INTEGERUNSIGNED.nullable(false), this, "");

    /**
     * Create a <code>srrs_tsd.user_has_roles</code> table reference
     */
    public UserHasRoles() {
        this("user_has_roles", null);
    }

    /**
     * Create an aliased <code>srrs_tsd.user_has_roles</code> table reference
     */
    public UserHasRoles(String alias) {
        this(alias, USER_HAS_ROLES);
    }

    private UserHasRoles(String alias, Table<UserHasRolesRecord> aliased) {
        this(alias, aliased, null);
    }

    private UserHasRoles(String alias, Table<UserHasRolesRecord> aliased, Field<?>[] parameters) {
        super(alias, null, aliased, parameters, "");
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Schema getSchema() {
        return SrrsTsd.SRRS_TSD;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public UniqueKey<UserHasRolesRecord> getPrimaryKey() {
        return Keys.KEY_USER_HAS_ROLES_PRIMARY;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public List<UniqueKey<UserHasRolesRecord>> getKeys() {
        return Arrays.<UniqueKey<UserHasRolesRecord>>asList(Keys.KEY_USER_HAS_ROLES_PRIMARY);
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public List<ForeignKey<UserHasRolesRecord, ?>> getReferences() {
        return Arrays.<ForeignKey<UserHasRolesRecord, ?>>asList(Keys.USER_HAS_ROLES_ROLE_ID_FOREIGN, Keys.USER_HAS_ROLES_USER_ID_FOREIGN);
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public UserHasRoles as(String alias) {
        return new UserHasRoles(alias, this);
    }

    /**
     * Rename this table
     */
    @Override
    public UserHasRoles rename(String name) {
        return new UserHasRoles(name, null);
    }
}
